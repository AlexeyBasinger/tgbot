import asyncpg
from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.utils.markdown import hcode
from tgbot.payment.QIWI import db
from tgbot.keyboards.inline import code, menu


async def code_invite(call: CallbackQuery, state: FSMContext):
    await state.set_state('code')
    await call.message.edit_text('–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∫–æ–¥')


async def wait_code(message: Message, state: FSMContext):
    if message.text in hcode(await db.vse_paroli()):
        try:
            b = db.gene_parol()
            while await db.skidka_show_true(b):
                b = db.gene_parol()
            user = await db.add_user(full_name=message.from_user.full_name, username=message.from_user.username,
                                     telegram_id=message.from_user.id, par=b)
            await db.count_referal2(message.text)
            await db.count_skidka2(message.text)


        except asyncpg.exceptions.UniqueViolationError:
            user = await db.select_user(telegram_id=message.from_user.id)

        await message.answer('üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–øüéâ\n'
                             '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å 1 –±–æ–Ω—É—Å–Ω—ã–π –¥–æ–ª–∞—Ä –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–≥–ª–∞—à–æ–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!!!\n'
                             f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/udemy_exam_bot?start={message.from_user.id}\n'
                             f'–í–∞—à –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {await db.priglos_id(message.from_user.id)}', reply_markup=menu)


    else:
        await message.answer('‚ùå–û—à–∏–±–∫–∞‚ùå\n'
                             'üîí–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!!!\n'
                             '–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑—ã–≤–∞—Ç—å –±–æ—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è,\n'
                             '–ª–∏–±–æ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ\n'
                             f'–ï—Å–ª–∏ –≤–∞—Å –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª: https://t.me/testUdemyCors\n'
                             f'–ó–∞—Ç–µ–º –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', reply_markup=code)
    await state.finish()


def register_code(dp: Dispatcher):
    dp.register_callback_query_handler(code_invite, text='code_text')
    dp.register_message_handler(wait_code, state='code')
