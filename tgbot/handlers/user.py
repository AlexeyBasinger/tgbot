from aiogram import Dispatcher
from aiogram.types import CallbackQuery
from tgbot.config import db
from tgbot.keyboards.inline import menu, nasad


async def referal(call: CallbackQuery):
    await call.answer()
    await call.message.edit_text(f'–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ {await db.referalka1(call.from_user.id)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n'
                                 f'–í–∞—à–∞ —Å–∫–∏–¥–∫–∞ —Ä–∞–≤–Ω–∞ {await db.referalka2(call.from_user.id)} USD', reply_markup=nasad)


async def nasad_v_menu(call: CallbackQuery):
    await call.answer()
    await call.message.edit_text(f'üéâ–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–øüéâ\n'
                                 f'–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å 10 –±–æ–Ω—É—Å–Ω—ã—Ö —Ä—É–±–ª–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–≥–ª–∞—à–æ–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!!!\n'
                                 f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/udemy_exam_bot?start={call.from_user.id}\n'
                                 f'–í–∞—à –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: {await db.priglos_id(call.from_user.id)}', reply_markup=menu)


async def proverka_bought_tovar(call: CallbackQuery):
    a = await db.prosmot_tovar_bought(call.from_user.id)
    result = '–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n'
    if a:
        for b in a:
            result += f'{b[0]} –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ: {b[1]}\n'
        await call.message.answer(result)
    else:
        await call.answer('–í—ã –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–∫–∞–∑–∞–ª–∏', cache_time=5, show_alert=True)


def register_user(dp: Dispatcher):
    dp.register_callback_query_handler(referal, text='referal_open')
    dp.register_callback_query_handler(nasad_v_menu, text='nasad_pls')
    dp.register_callback_query_handler(proverka_bought_tovar, text='pokaz_tovar_bought')
